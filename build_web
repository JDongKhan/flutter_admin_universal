#!/bin/sh
export PUB_HOSTED_URL=https://pub.flutter-io.cn
export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn
#获取上层目录
cur_dir=$(dirname $(pwd))
#cur_dir=$(dirname $cur_dir)
useCanvasKit=1

#脚本目录
flutter_module_path=$(pwd)
target_web_package=$flutter_module_path/package
build_dir=$flutter_module_path/build/web

echo "flutter项目地址:$flutter_module_path"
echo "build_dir:$target_flutter_repo_path"

echo "切换到$flutter_module_path,开始打包"
#脚本所在目录
cd $flutter_module_path

#先清理
echo "清理缓存文件:$build_dir"
rm -rf $build_dir

echo "开始打包..."
if [ $useCanvasKit == 1 ]; then
  echo "build for canvaskit"
  flutter build web --web-renderer=canvaskit --dart-define=FLUTTER_WEB_CANVASKIT_URL=package/bin/
else
  echo "build for html"
  flutter build web --web-renderer=html --release
fi

if [ $? -ne 0 ]; then
    echo "打包失败"
    exit 0
fi

#flutter build aar --no-debug --no-profile --no-pub --target-platform android-arm,android-arm64 --build-number 1.0.1
echo "打包完成"

if [ $useCanvasKit == 1 ]; then
  find canvaskit-wasm-*
#  echo "copy ${target_web_package} to $build_dir"
#  cp -r $target_web_package $build_dir
  echo 'copy canvaskit-wasm to $build_dir'
  find . -name canvaskit-wasm-* -exec cp {} $build_dir \;
  find . -name KFOmCnqEu92Fr1Me5WZLCzYlKw.ttf -exec cp {} $build_dir \;
  cd $build_dir
  echo 'unzip canvaskit-wasm'
  tar -zxvf canvaskit-wasm-*
  echo 'clean canvaskit-wasm'
  rm  canvaskit-wasm-*

  echo '替换google样式来源'
  sed -i '' 's/fonts.googleapis.com/fonts.loli.net/g' main.dart.js
  echo '替换字体'
  sed -i '' 's/https:\/\/fonts.gstatic.com\/s\/roboto\/v20\///g' main.dart.js
  if [ $? -ne 0 ]; then
      echo "拷贝失败"
      exit 0
  fi
fi
